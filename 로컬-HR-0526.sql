-- ROWID, ROWNUM 테이블에 행, ROW, INSTANCE, RECORD, TUBLE, LINE 번호를 자동설정한다.
SELECT ROWNUM FROM EMPLOYEES WHERE ROWNUM <= 10; -- 게시판 기능에서 자주씀
SELECT ROWID FROM EMPLOYEES;
SELECT ROWNUM FROM EMPLOYEES;

-- TAP : TABLE 각 데이터베이스마다 테이블 내용을 보고 싶을 때 TAB 조사
SELECT * FROM TAB;

-- 테이블 복사: EMPLOYEES2 : EMPLOYEES (NOT NULL 제약조건은 복사가 이루어진다.)
-- PK, UK, CHECK, FK (무결성 제약조건)
CREATE TABLE EMPLOYEES2 AS SELECT * FROM EMPLOYEES; 
SELECT * FROM EMPLOYEES2; 
DESC EMPLOYEES2;

-- AGE 숫자 3까지만 인정, 체크제약조건 0 < 나이 < 150
ALTER TABLE EMPLOYEES2 ADD AGE NUMBER(3) CHECK(AGE BETWEEN 0 AND 150);
SELECT * FROM EMPLOYEES2;

-- AGE 숫자 4까지로 증가(수정)
ALTER TABLE EMPLOYEES2 MODIFY AGE NUMBER(4);

-- AGE 삭제
ALTER TABLE EMPLOYEES2 DROP COLUMN AGE;

-- FIRST_NAME VARCHAR2(20) -> VARCHAR2(10) 자료보다 작아서 X 20이상으론 가능
ALTER TABLE EMPLOYEES2 MODIFY FIRST_NAME VARCHAR2(20);

-- EMPLOYEES2 테이블 삭제 후 ROLLBACK을 사용하지 않고 복구시키는 방법(휴지통 복구)
DROP TABLE EMPLOYEES2;
SELECT * FROM TAB;
ROLLBACK;

-- 휴지통 구조
DESC RECYCLEBIN;
SELECT * FROM RECYCLEBIN;

-- 휴지통 복구
FLASHBACK TABLE EMPLOYEES2 TO BEFORE DROP;
SELECT * FROM EMPLOYEES2;

-- 휴지통 비우기
PURGE RECYCLEBIN;

-- 컬럼 사이즈를 줄여서 복사하는 방법
CREATE TABLE TESTA(
    NAME CHAR(20) NOT NULL,
    AGE NUMBER(3) NOT NULL
);
INSERT INTO TESTA VALUES('1234567890', 34);
INSERT INTO TESTA VALUES('12345678', 60);

CREATE TABLE TESTB(
    NAME2 CHAR(10) NOT NULL,
    AGE2 NUMBER(3) NOT NULL
);
INSERT INTO TESTB(NAME2, AGE2) SELECT SUBSTR(NAME,1,10), AGE FROM TESTA;

-- 테이블명 변경 방법 RENAME 테이블명 TO 변경할 테이블명
SELECT * FROM TAB;
RENAME EMPLOYEES2 TO EMPLOYEES4;

-- 테이블을 설계한다. EMP01(번호, 이름, 직업, 부서 제약조건) NULL
DROP TABLE EMP01;
CREATE TABLE EMP01(
    EMP_NO NUMBER(10),
    EMP_NAME VARCHAR2(10),
    EMP_JOB VARCHAR2(10) DEFAULT 'BACKEND',
    EMP_ID VARCHAR2(10)
);
INSERT INTO EMP01 VALUES(10, 'KDJ', 'IT강사', NULL);
INSERT INTO EMP01(EMP_NO, EMP_NAME, EMP_ID) VALUES(10, 'KHR', 'GD');

-- INSTANCE에 있는 값을 모두 없애시오.
TRUNCATE TABLE EMP01;
SELECT * FROM EMP01;
DROP TABLE EMP01;

-- DEP_ID NOT NULL 제약조건을 설정하라.
ALTER TABLE EMP01 MODIFY EMP_ID VARCHAR2(10) NOT NULL;
INSERT INTO EMP01(EMP_NO, EMP_NAME, EMP_JOB, EMP_ID) VALUES(11, 'KHY', 'ITDEV', '구글');
INSERT INTO EMP01 VALUES(12, 'KKK', 'ITDEV', 'LG');
SELECT * FROM EMP01;

-- UNIQUE 제약조건을 줄 것
DROP TABLE EMP05;
CREATE TABLE EMP05(
    EMP_NO NUMBER(10),
    EMP_NAME VARCHAR2(10),
    EMP_JOB VARCHAR2(10) DEFAULT 'BACKEND',
    EMP_ID VARCHAR2(10)
);
DESC EMP05;
ALTER TABLE EMP05 ADD CONSTRAINT EMP05_UK UNIQUE(EMP_NAME);
ALTER TABLE EMP05 DROP CONSTRAINT EMP05_UK;
SELECT * FROM USER_CONSTRAINTS WHERE TABLE_NAME = 'EMP05';

-- UNIQUE 제약조건 위배되는 사항
SELECT * FROM EMP05;
INSERT INTO EMP05(EMP_NO, EMP_NAME, EMP_JOB, EMP_ID) VALUES(11, 'KHY', 'ITDEV', '구글');
INSERT INTO EMP05(EMP_NO, EMP_NAME, EMP_JOB, EMP_ID) VALUES(12, NULL, 'ITDEV', '구글');
DELETE FROM EMP05 WHERE EMP_NAME IS NULL;

-- 데이터 DICTIONARY (USER, ALL, DBA) 제약조건 구조와, 테이블 구조 확인
SELECT * FROM USER_CONSTRAINTS WHERE TABLE_NAME = 'EMPLOYEES';
SELECT * FROM USER_TABLES WHERE TABLE_NAME = 'EMPLOYEES';
