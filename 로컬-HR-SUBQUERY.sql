-- [문제 1] EMPLOYEES 테이블에서 CEO에게 보고하는 직원의 모든 정보를 출력하는 SELECT문을 작성하시오.
SELECT * FROM EMPLOYEES WHERE MANAGER_ID = (SELECT EMPLOYEE_ID FROM EMPLOYEES WHERE MANAGER_ID IS NULL);
-- TEST 
SELECT * FROM EMPLOYEES WHERE MANAGER_ID IS NULL;

-- [문제 2] EMPLOYEES 테이블에서 Accounting 부서에서 근무하는 직원과 같은 업무를 하는 
-- 직원의 이름, 업무명를 출력하는 SELECT문을 작성하시오.
SELECT FIRST_NAME "직원의 이름", JOB_ID 업무명 FROM EMPLOYEES WHERE JOB_ID 
IN(SELECT JOB_ID FROM EMPLOYEES INNER JOIN DEPARTMENTS USING(DEPARTMENT_ID)
WHERE UPPER(DEPARTMENT_NAME) = 'ACCOUNTING');
-- TEST
SELECT * FROM EMPLOYEES WHERE JOB_ID IN('AC_MGR','AC_ACCOUNT');

-- [문제 3] 직급이 'ST_MAN'인 직원이 받는 급여들의 최소 급여보다 많이 받는 
-- 직원들의 이름과 급여를 출력하되 부서번호가 20번인 직원은 제외한다.
SELECT FIRST_NAME 이름, SALARY 급여, DEPARTMENT_ID 부서번호 FROM EMPLOYEES WHERE SALARY > 
ANY(SELECT SALARY FROM EMPLOYEES WHERE UPPER(JOB_ID) = 'ST_MAN') 
AND DEPARTMENT_ID <> 20;
-- TEST
SELECT SALARY FROM EMPLOYEES WHERE UPPER(JOB_ID) = 'ST_MAN';

-- [문제 4] EMPLOYEES 테이블에서 Valli라는 이름을 가진 직원과 업무명 및 월급이 같은 사원의
-- 모든 정보 를 출력하는 SELECT문을 작성하시오. (결과에서 Valli는 제외)

SELECT * FROM EMPLOYEES WHERE (JOB_ID, SALARY)
IN(SELECT JOB_ID, SALARY FROM EMPLOYEES WHERE UPPER(FIRST_NAME) = 'VALLI')
AND UPPER(FIRST_NAME) <> 'VALLI';
-- TEST
SELECT JOB_ID, SALARY FROM EMPLOYEES WHERE UPPER(FIRST_NAME) = 'VALLI';
SELECT * FROM EMPLOYEES WHERE (JOB_ID, SALARY) IN (('IT_PROG',4800));

-- [문제 5] EMPLOYEES 테이블에서 월급이 자신이(‘Valli’) 속한 부서의 평균 월급보다 높은 사원의 
-- 부서번호, 이름, 급여를 출력하는 SELECT문을 작성하시오.
SELECT DEPARTMENT_ID 부서번호, FIRST_NAME 이름, SALARY 급여 FROM EMPLOYEES 
WHERE SALARY > (SELECT AVG(SALARY) FROM EMPLOYEES GROUP BY DEPARTMENT_ID 
HAVING DEPARTMENT_ID = (SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE UPPER(FIRST_NAME) = 'VALLI'))
ORDER BY SALARY;
-- TEST
SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE UPPER(FIRST_NAME) = 'VALLI';
SELECT AVG(SALARY) FROM EMPLOYEES GROUP BY DEPARTMENT_ID 
HAVING DEPARTMENT_ID = (SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE UPPER(FIRST_NAME) = 'VALLI');
