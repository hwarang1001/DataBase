-- 내림차순정렬된 순위 설정하기 RANK(), DENSE_RANK()
SELECT ROWNUM, FIRST_NAME, SALARY FROM EMPLOYEES ORDER BY SALARY DESC;
SELECT ROWNUM, FIRST_NAME, SALARY FROM (SELECT * FROM EMPLOYEES ORDER BY SALARY DESC) WHERE ROWNUM <= 10;
SELECT FIRST_NAME, SALARY, RANK() OVER(ORDER BY SALARY DESC), DENSE_RANK() OVER(ORDER BY SALARY DESC) 
FROM EMPLOYEES ORDER BY SALARY DESC; 

-- 내림차순 순위 결정
SELECT FIRST_NAME, SALARY, COMMISSION_PCT, RANK() OVER(ORDER BY SALARY DESC, COMMISSION_PCT DESC), 
DENSE_RANK() OVER(ORDER BY SALARY DESC, COMMISSION_PCT DESC) 
FROM EMPLOYEES ORDER BY SALARY DESC, COMMISSION_PCT DESC; 

-- 부서별로 월급 순위 구하기
SELECT DEPARTMENT_ID, FIRST_NAME, SALARY, COMMISSION_PCT, 
RANK() OVER(PARTITION BY DEPARTMENT_ID ORDER BY SALARY DESC, COMMISSION_PCT DESC) RANK, 
DENSE_RANK() OVER(PARTITION BY DEPARTMENT_ID ORDER BY SALARY DESC, COMMISSION_PCT DESC) 
FROM EMPLOYEES ORDER BY DEPARTMENT_ID, SALARY DESC, COMMISSION_PCT DESC;

-- 그룹별 최대값 SALARY, 최소값 SALARY
SELECT DEPARTMENT_ID, FIRST_NAME, SALARY, 
MIN(SALARY) KEEP (DENSE_RANK FIRST ORDER BY SALARY) OVER(PARTITION BY DEPARTMENT_ID) SAL_MIN, 
MAX(SALARY) KEEP (DENSE_RANK LAST ORDER BY SALARY) OVER(PARTITION BY DEPARTMENT_ID) SAL_MAX 
FROM EMPLOYEES ORDER BY DEPARTMENT_ID, SALARY DESC;

-- 페이징기법 입사한 날짜별로 정렬을 하고 한페이지당 10개씩 보여준다. 4페이지를 보여주세요.
SELECT * FROM EMPLOYEES;

SELECT ROWNUM AS RNUM, E.* FROM EMPLOYEES E ORDER BY HIRE_DATE;
SELECT * FROM EMPLOYEES E ORDER BY HIRE_DATE ASC WHERE ROWNUM BETWEEN 31 AND 40;
SELECT * FROM (SELECT ROWNUM AS RNUM, E.* FROM EMPLOYEES E ORDER BY HIRE_DATE ) WHERE RNUM BETWEEN 31 AND 40;

SELECT * FROM (SELECT ROWNUM AS RN, E.* 
FROM (SELECT * FROM EMPLOYEES ORDER BY HIRE_DATE ASC)E WHERE ROWNUM<=40) 
WHERE RN >= 31;
